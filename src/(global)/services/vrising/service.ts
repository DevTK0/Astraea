import { z } from "zod";

export const serverSettingsSchema = z.object({
    GameDifficulty: z.string(),
    GameModeType: z.string(),
    CastleDamageMode: z.string(),
    SiegeWeaponHealth: z.string(),
    PlayerDamageMode: z.string(),
    CastleHeartDamageMode: z.string(),
    PvPProtectionMode: z.string(),
    DeathContainerPermission: z.string(),
    RelicSpawnType: z.string(),
    CanLootEnemyContainers: z.boolean(),
    BloodBoundEquipment: z.boolean(),
    TeleportBoundItems: z.boolean(),
    BatBoundItems: z.boolean(),
    AllowGlobalChat: z.boolean(),
    AllWaypointsUnlocked: z.boolean(),
    FreeCastleRaid: z.boolean(),
    FreeCastleClaim: z.boolean(),
    FreeCastleDestroy: z.boolean(),
    InactivityKillEnabled: z.boolean(),
    InactivityKillTimeMin: z.number(),
    InactivityKillTimeMax: z.number(),
    InactivityKillSafeTimeAddition: z.number(),
    InactivityKillTimerMaxItemLevel: z.number(),
    StartingProgressionLevel: z.number(),
    DisableDisconnectedDeadEnabled: z.boolean(),
    DisableDisconnectedDeadTimer: z.number(),
    DisconnectedSunImmunityTime: z.number(),
    InventoryStacksModifier: z.number(),
    DropTableModifier_General: z.number(),
    DropTableModifier_Missions: z.number(),
    MaterialYieldModifier_Global: z.number(),
    BloodEssenceYieldModifier: z.number(),
    JournalVBloodSourceUnitMaxDistance: z.number(),
    PvPVampireRespawnModifier: z.number(),
    CastleMinimumDistanceInFloors: z.number(),
    ClanSize: z.number(),
    BloodDrainModifier: z.number(),
    DurabilityDrainModifier: z.number(),
    GarlicAreaStrengthModifier: z.number(),
    HolyAreaStrengthModifier: z.number(),
    SilverStrengthModifier: z.number(),
    SunDamageModifier: z.number(),
    CastleDecayRateModifier: z.number(),
    CastleBloodEssenceDrainModifier: z.number(),
    CastleSiegeTimer: z.number(),
    CastleUnderAttackTimer: z.number(),
    CastleRaidTimer: z.number(),
    CastleRaidProtectionTime: z.number(),
    CastleExposedFreeClaimTimer: z.number(),
    CastleRelocationCooldown: z.number(),
    CastleRelocationEnabled: z.boolean(),
    AnnounceSiegeWeaponSpawn: z.boolean(),
    ShowSiegeWeaponMapIcon: z.boolean(),
    BuildCostModifier: z.number(),
    RecipeCostModifier: z.number(),
    CraftRateModifier: z.number(),
    ResearchCostModifier: z.number(),
    RefinementCostModifier: z.number(),
    RefinementRateModifier: z.number(),
    ResearchTimeModifier: z.number(),
    DismantleResourceModifier: z.number(),
    ServantConvertRateModifier: z.number(),
    RepairCostModifier: z.number(),
    Death_DurabilityFactorLoss: z.number(),
    Death_DurabilityLossFactorAsResources: z.number(),
    StarterEquipmentId: z.number(),
    StarterResourcesId: z.number(),
    VBloodUnitSettings: z.array(z.unknown()),
    UnlockedAchievements: z.array(z.unknown()),
    UnlockedResearchs: z.array(z.unknown()),
    GameTimeModifiers: z.object({
        DayDurationInSeconds: z.number(),
        DayStartHour: z.number(),
        DayStartMinute: z.number(),
        DayEndHour: z.number(),
        DayEndMinute: z.number(),
        BloodMoonFrequency_Min: z.number(),
        BloodMoonFrequency_Max: z.number(),
        BloodMoonBuff: z.number(),
    }),
    VampireStatModifiers: z.object({
        MaxHealthModifier: z.number(),
        PhysicalPowerModifier: z.number(),
        SpellPowerModifier: z.number(),
        ResourcePowerModifier: z.number(),
        SiegePowerModifier: z.number(),
        DamageReceivedModifier: z.number(),
        ReviveCancelDelay: z.number(),
    }),
    UnitStatModifiers_Global: z.object({
        MaxHealthModifier: z.number(),
        PowerModifier: z.number(),
        LevelIncrease: z.number(),
    }),
    UnitStatModifiers_VBlood: z.object({
        MaxHealthModifier: z.number(),
        PowerModifier: z.number(),
        LevelIncrease: z.number(),
    }),
    EquipmentStatModifiers_Global: z.object({
        MaxHealthModifier: z.number(),
        ResourceYieldModifier: z.number(),
        PhysicalPowerModifier: z.number(),
        SpellPowerModifier: z.number(),
        SiegePowerModifier: z.number(),
        MovementSpeedModifier: z.number(),
    }),
    CastleStatModifiers_Global: z.object({
        TickPeriod: z.number(),
        SafetyBoxLimit: z.number(),
        EyeStructuresLimit: z.number(),
        TombLimit: z.number(),
        VerminNestLimit: z.number(),
        PrisonCellLimit: z.number(),
        HeartLimits: z.object({
            Level1: z.object({
                FloorLimit: z.number(),
                ServantLimit: z.number(),
                BuildLimits: z.number(),
                HeightLimit: z.number(),
            }),
            Level2: z.object({
                FloorLimit: z.number(),
                ServantLimit: z.number(),
                BuildLimits: z.number(),
                HeightLimit: z.number(),
            }),
            Level3: z.object({
                FloorLimit: z.number(),
                ServantLimit: z.number(),
                BuildLimits: z.number(),
                HeightLimit: z.number(),
            }),
            Level4: z.object({
                FloorLimit: z.number(),
                ServantLimit: z.number(),
                BuildLimits: z.number(),
                HeightLimit: z.number(),
            }),
            Level5: z.object({
                FloorLimit: z.number(),
                ServantLimit: z.number(),
                BuildLimits: z.number(),
                HeightLimit: z.number(),
            }),
        }),
        CastleLimit: z.number(),
        NetherGateLimit: z.number(),
        ThroneOfDarknessLimit: z.number(),
    }),
    PlayerInteractionSettings: z.object({
        TimeZone: z.string(),
        VSPlayerWeekdayTime: z.object({
            StartHour: z.number(),
            StartMinute: z.number(),
            EndHour: z.number(),
            EndMinute: z.number(),
        }),
        VSPlayerWeekendTime: z.object({
            StartHour: z.number(),
            StartMinute: z.number(),
            EndHour: z.number(),
            EndMinute: z.number(),
        }),
        VSCastleWeekdayTime: z.object({
            StartHour: z.number(),
            StartMinute: z.number(),
            EndHour: z.number(),
            EndMinute: z.number(),
        }),
        VSCastleWeekendTime: z.object({
            StartHour: z.number(),
            StartMinute: z.number(),
            EndHour: z.number(),
            EndMinute: z.number(),
        }),
    }),
    TraderModifiers: z.object({
        StockModifier: z.number(),
        PriceModifier: z.number(),
        RestockTimerModifier: z.number(),
    }),
    WarEventGameSettings: z.object({
        Interval: z.number(),
        MajorDuration: z.number(),
        MinorDuration: z.number(),
        WeekdayTime: z.object({
            StartHour: z.number(),
            StartMinute: z.number(),
            EndHour: z.number(),
            EndMinute: z.number(),
        }),
        WeekendTime: z.object({
            StartHour: z.number(),
            StartMinute: z.number(),
            EndHour: z.number(),
            EndMinute: z.number(),
        }),
        ScalingPlayers1: z.object({
            PointsModifier: z.number(),
            DropModifier: z.number(),
        }),
        ScalingPlayers2: z.object({
            PointsModifier: z.number(),
            DropModifier: z.number(),
        }),
        ScalingPlayers3: z.object({
            PointsModifier: z.number(),
            DropModifier: z.number(),
        }),
        ScalingPlayers4: z.object({
            PointsModifier: z.number(),
            DropModifier: z.number(),
        }),
    }),
});
